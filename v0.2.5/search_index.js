var documenterSearchIndex = {"docs":
[{"location":"apis/#API-documentation","page":"API","title":"API documentation","text":"","category":"section"},{"location":"apis/","page":"API","title":"API","text":"lcs\nscs\nalign\nfeaturematrix","category":"page"},{"location":"apis/#VectorAlignments.lcs","page":"API","title":"VectorAlignments.lcs","text":"Find the longest common subsequence for a vector of sequences.\n\nExamples\n\njulia> lcs([1,3,5], [1,2,3])\n2-element Vector{Any}:\n 1\n 3\n\nlcs(v; norm, cf)\n\n\n\n\n\n\n","category":"function"},{"location":"apis/#VectorAlignments.scs","page":"API","title":"VectorAlignments.scs","text":"Find the shortest common supersequence for a vector of sequences.\n\nExamples\n\njulia> scs([1,3,5], [1,2,3])\n4-element Vector{Any}:\n 1\n 2\n 3\n 5\n\nscs(v; norm, cf)\n\n\n\n\n\n\n","category":"function"},{"location":"apis/#VectorAlignments.align","page":"API","title":"VectorAlignments.align","text":"Align each of the vectors in the parameter list to the comprehensive SCS for all of the parameter vectors.\n\nExamples\n\njulia> align([1,3,5], [1,2,3])\n2-element Vector{Any}:\n Any[1, nothing, 3, 5]\n Any[1, 2, 3, nothing]\n\nalign(v; norm, cf)\n\n\n\n\n\n\n","category":"function"},{"location":"apis/#VectorAlignments.featurematrix","page":"API","title":"VectorAlignments.featurematrix","text":"Create a feature matrix for a list of vectors. In the resulting matrix, each column c represents the alignment of one vector with the SCS for the parameter vectors, each row r represents one feature, and each cell value r,c is the value for feature r in vector c.\n\nExamples\n\njulia> featurematrix([1,3,5], [4,5,6])\n5×2 Matrix{Any}:\n\t1          nothing\n\t3          nothing\n\tnothing  4\n\t5         5\n\tnothing  6\t\n\nfeaturematrix(v; norm, cf)\n\n\n\n\n\n\n","category":"function"},{"location":"#VectorAlignments","page":"Home","title":"VectorAlignments","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Compare and align vectors with contents of any type: find longest common subsequence, shortest common supersequence, and align elements in parallel sequences.","category":"page"},{"location":"#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using VectorAlignments","category":"page"},{"location":"","page":"Home","title":"Home","text":"Longest common subsequence:","category":"page"},{"location":"","page":"Home","title":"Home","text":"lcs(\"abc\", \"abd\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"Shortest common supersequence:","category":"page"},{"location":"","page":"Home","title":"Home","text":"scs(\"abc\", \"abd\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"Align elements in parallel sequences (return value is a Vector of Vectors):","category":"page"},{"location":"","page":"Home","title":"Home","text":"align(\"abc\", \"abd\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"Align elements in parallel sequences (return value is a two-dimensional matrix):","category":"page"},{"location":"","page":"Home","title":"Home","text":"featurematrix(\"abc\", \"abd\")","category":"page"},{"location":"#Types","page":"Home","title":"Types","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The vectors to compare can contain elements of any type.","category":"page"},{"location":"","page":"Home","title":"Home","text":"scs([1,3,5], [1,2,3])","category":"page"},{"location":"","page":"Home","title":"Home","text":"Since strings are treated as vectors of characters, the return values of scs and lcs will be vectors of characters: you'll have to turn them into strings yourself if you want a String value.","category":"page"},{"location":"","page":"Home","title":"Home","text":"scs(\"bc\", \"abc\") |> join","category":"page"},{"location":"params/#Parameters-and-return-values","page":"Parameters and options","title":"Parameters and return values","text":"","category":"section"},{"location":"params/","page":"Parameters and options","title":"Parameters and options","text":"lcs, scs, align and featurematrix all accept a variable number of vector parameters.  lcs and scs always return a single vector. ","category":"page"},{"location":"params/","page":"Parameters and options","title":"Parameters and options","text":"using VectorAlignments\ns1 = split(\"Now is the time\")\ns2 = split(\"Now is not the time\")\ns3 = split(\"Now might be the time\")\nlcs(s1, s2, s3)","category":"page"},{"location":"params/","page":"Parameters and options","title":"Parameters and options","text":"scs(s1, s2, s3)","category":"page"},{"location":"params/","page":"Parameters and options","title":"Parameters and options","text":"align returns a vector of vectors, with one output vector for each input vector. The length of each of the output vectors equals the length of the complete SCS for the input vectors.","category":"page"},{"location":"params/","page":"Parameters and options","title":"Parameters and options","text":"align(s1, s2, s3)","category":"page"},{"location":"params/","page":"Parameters and options","title":"Parameters and options","text":"featurematrix returns a two-dimensional matrix, with one row for each feature and one column for each input vector.","category":"page"},{"location":"params/","page":"Parameters and options","title":"Parameters and options","text":"featurematrix(s1, s2, s3)","category":"page"},{"location":"params/#Order-of-alignment-in-gaps","page":"Parameters and options","title":"Order of alignment in gaps","text":"","category":"section"},{"location":"params/","page":"Parameters and options","title":"Parameters and options","text":"In aligning sequences with different content in the same position in the sequence, the order of parameters is used to order elements in the resulting alignment. For example, in the following comparison, all three sequences match on d; the alignment add elements preceding d by taking the vectors in the order they are given.  ","category":"page"},{"location":"params/","page":"Parameters and options","title":"Parameters and options","text":"scs(\"ad\", \"bd\", \"cd\") ","category":"page"},{"location":"params/","page":"Parameters and options","title":"Parameters and options","text":"This means that you can control the alignment of gaps by your ordering of parameters.","category":"page"},{"location":"params/","page":"Parameters and options","title":"Parameters and options","text":"scs(\"cd\", \"bd\", \"ad\") ","category":"page"},{"location":"params/#Optional-parameters","page":"Parameters and options","title":"Optional parameters","text":"","category":"section"},{"location":"params/","page":"Parameters and options","title":"Parameters and options","text":"lcs, scs, align and featurematrix use the Needleman–Wunsch algorithm to align sequences. Its dynamic-programming approach constructs a matrix of scores comparing two lists element by element. lcs, scs, align and featurematrix allow optional named parameters for two functions that are applied in this process: ","category":"page"},{"location":"params/","page":"Parameters and options","title":"Parameters and options","text":"norm: a function to normalize values before comparing them. The default is to use the unaltered value of the element (x -> x).\ncf: a function for comparing the elements of the two vectors. The default is to compare for equality (==).","category":"page"},{"location":"params/#Examples:-normalization","page":"Parameters and options","title":"Examples: normalization","text":"","category":"section"},{"location":"params/","page":"Parameters and options","title":"Parameters and options","text":"The following alignment normalizes characters to lowercase before comparing them, so that 'b' and 'B' are aligned. Note that the raw values (before normalization) are retained in the aligned vectors.","category":"page"},{"location":"params/","page":"Parameters and options","title":"Parameters and options","text":"featurematrix(\"ab\", \"Bc\", \"cd\"; norm = lowercase)","category":"page"},{"location":"params/","page":"Parameters and options","title":"Parameters and options","text":"lcs and scs follow the order of parameters in selecting a value for their single output vector. Compare the following two examples.","category":"page"},{"location":"params/","page":"Parameters and options","title":"Parameters and options","text":"scs(\"ab\", \"Bc\", \"cd\"; norm = lowercase)   |> join","category":"page"},{"location":"params/","page":"Parameters and options","title":"Parameters and options","text":"scs(\"aB\", \"bc\", \"cd\"; norm = lowercase)   |> join","category":"page"},{"location":"params/#Examples:-comparison","page":"Parameters and options","title":"Examples: comparison","text":"","category":"section"},{"location":"params/","page":"Parameters and options","title":"Parameters and options","text":"In the following example, we compare elements using Julia's isapprox function with a value of 0.1 for relative tolerance:","category":"page"},{"location":"params/","page":"Parameters and options","title":"Parameters and options","text":"a = [0.95, 1.1, 0.98]\nb = [0.93, 0.99, 0.96]\n\nf = (x,y) -> ≈(x,y; rtol = 0.1)\n\nfeaturematrix(a,b; cf = f)","category":"page"},{"location":"params/","page":"Parameters and options","title":"Parameters and options","text":"Compare this result with an alignment of the same vectors based on normalizing the floating point values by rounding them to integers:","category":"page"},{"location":"params/","page":"Parameters and options","title":"Parameters and options","text":"featurematrix(a,b; norm = round)","category":"page"}]
}
